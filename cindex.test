# ============================================================================
#
# Copyright (c) 2013 Taketsuru <taketsuru11@gmail.com>.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# ============================================================================

package require tcltest
namespace import tcltest::*

package require cindex
namespace import cindex::*

# ---------------------------------------------------------------------- index

test cindex_index-1.0 "index / alpha omega" -body {
    index myindex
    myindex options -none
    myindex options
    rename myindex {}
    return
}

test cindex_index-1.1 "index options / default value" -setup {
    index myindex
} -cleanup {
    rename myindex {}
} -body {
    myindex options
} -result -none

test cindex_index-1.2 "index options / set simple option" -setup {
    index myindex
} -cleanup {
    rename myindex {}
} -body {
    myindex options -threadBackgroundPriorityForIndexing
    myindex options
} -result -threadBackgroundPriorityForIndexing

test cindex_index-1.3 "index options / set combined option" -setup {
    index myindex
} -cleanup {
    rename myindex {}
} -body {
    myindex options -threadBackgroundPriorityForAll
    myindex options
} -result -threadBackgroundPriorityForAll

# XXX various options to myindex parse command should be tested.
# -detailPreprocessingRecord
# -incomplete
# -precompiledPreamble
# -cacheCompletionResults
# -forSerialization
# -cxxChainedPCH
# -skipFunctionBodies
# -includeBriefCommentsInCodeCompletion

# ----------------------------------------------------------- translation unit

set setupMytu {
    index myindex
    myindex parse mytu -- \
        -I /usr/local/include -I /usr/local/include/tcl8.6 \
        libcindex.c
}

set cleanupMytu {
    rename mytu {}
    rename myindex {}
}

test cindex_tu-0.0 "translation unit / alpha omega" \
-setup $setupMytu \
-cleanup [concat $cleanupMytu {
    ;file delete cindex.ast
} ] -body {
    mytu save cindex.ast
    mytu reparse
    mytu resourceUsage
    mytu cursor
    return
}

# --------------------------------------------------------------------- cursor

test cindex_cursor-0.0 "cursor / alpha omega" \
    -setup $setupMytu \
    -cleanup $cleanupMytu \
-body {
    set root [mytu cursor]
    cursor equal $root $root
    cursor hash $root
    cursor linkage $root
    cursor availability $root
    cursor language $root
    cursor translationUnit $root
    cursor semanticParent $root
    cursor lexicalParent $root
    cursor overriddenCursors $root
    cursor includedFile $root
    cursor expansionLocation $root
    cursor presumedLocation $root
    cursor spellingLocation $root
    cursor fileLocation $root
    cursor is declaration $root
    cursor is reference $root
    cursor is expression $root
    cursor is statement $root
    cursor is attribute $root
    cursor is invalid $root
    cursor is translationUnit $root
    cursor is preprocessing $root
    cursor is unexposed $root
    cursor is inSystemHeader $root
    cursor is inMainFile $root
    cursor type $root
    cursor typedefDeclUnderlyingType $root
    cursor numArguments $root
    cursor argument $root 0
    foreachChild child $root {
        switch -- [lindex $child 0] {
            EnumDecl {
                cursor enumDeclIntegerType $child
                recurse
            } EnumConstantDecl {
                cursor enumConstantDeclValue $child
            } StructDecl {
                recurse
            } FieldDecl {
                cursor fieldDeclBitWidth $child
            }
        }
    }
    return
}

# ----------------------------------------------------------------------- type

test cindex_type-0.0 "type / alpha omega" \
-setup $setupMytu \
-cleanup $setupMytu \
-body {
    set mytype [cursor type [mytu cursor]]
    type spelling $mytype
    type equal $mytype $mytype
    return
}

# ----------------------------------------------------------------------------

cleanupTests

# Local Variables:
# tab-width: 8
# fill-column: 78
# mode: tcl
# indent-tabs-mode: nil
# End:
